'use strict';define(["jquery","lodash","superagent","src/header/components/default","src/util/util","src/util/ui","src/util/debug","src/util/roc-view","src/util/versioning","src/util/couchdbAttachments","src/util/uploadUi","fancytree","components/ui-contextmenu/jquery.ui-contextmenu.min","jquery-ui/ui/widgets/accordion","jquery-ui/ui/widgets/tooltip"],function(a,b,c,d,e,f,g,h,i,j,k){"use strict";function l(c,a){return c.folder===a.folder?c.title.localeCompare(a.title):c.folder?-1:1}function m(a,b,c,d){var e=a.get(c);e||(e=new Map,a.set(c,e));for(var f=0;f<d.length-1;f++){const a=`__folder__${d[f]}`;e.has(a)||e.set(a,new Map),e=e.get(a)}const g=n(e,d[f]);e.set(g,b)}function n(a,b){for(;a.has(b);)b=`__view__${b}`;return b}function o(a){return a=a.trim(),!!(0<a.length)&&a}function p(a){return a=a.trim(),!!/^[a-zA-Z0-9$_-]+$/.test(a)&&a}function q(a){return a.replace("__folder__","").replace(/(__view__)+/,"")}var r=1024*(1024*50),s={color:"blue",cursor:"pointer",textDecoration:"underline"},t=b.template("<table>\n    <tr>\n        <td style=\"vertical-align: top;\"><b>Document id</b></td>\n        <td><%= view.id %></td>\n    </tr>\n    <tr>\n        <td style=\"vertical-align: top;\"><b>Flavor</b></td>\n        <td><%= flavor %></td>\n    </tr>\n    <tr>\n        <td style=\"vertical-align: top;\"><b>Name</b></td>\n        <td><% print(flavors[flavors.length-1]) %></td>\n    </tr>\n    <tr>\n        <td style=\"vertical-align: top;\"><b>Location</b></td>\n        <td><li><% print(flavors.join('</li><li>')) %></li></td>\n    </tr>\n</table>");class u extends d{get flavor(){return this._flavor?this._flavor:this._flavor=window.localStorage.getItem("ci-visualizer-roc-views-flavor")||"default"}set flavor(a){this._flavor=a,window.localStorage.setItem("ci-visualizer-roc-views-flavor",a)}initImpl(){var b=this.options||{};if(!b.url||!b.database)throw new Error("roc-views: url and database options are mandatory");this.rocUrl=b.url.replace(/\\$/,""),this.rocDatabase=b.database,this.rocDbUrl=`${this.rocUrl}/db/${this.rocDatabase}`,this.rocReady=!1,this.rocAuthenticated=!1,this.rocUsername=null,this._flavor=null,this.activeNode=null,this.activeView=null,this.loadedNode=null,this.verifyRoc(),a(document).keydown(a=>{(a.ctrlKey||a.metaKey)&&!a.altKey&&83===a.which&&(a.preventDefault(),this.saveCurrentView("loaded"))})}_onClick(){this.rocReady?(this.setStyleOpen(this._open),this._open?(this.createDom(),this.open()):this.close()):(f.showNotification("View database does not respond","error"),g.error("roc-views: unreachable database. Retrying now"),this.verifyRoc())}getRequest(a,b){var d=c.get(this.rocUrl+a).withCredentials();return b&&d.query(b),d}getRequestDB(a,b){return this.getRequest(`/db/${this.rocDatabase}${a}`,b)}putRequestDB(a,b){var d=c.put(this.rocDbUrl+a).withCredentials();return d.send(b),d}postRequestDB(a,b){var d=c.post(this.rocDbUrl+a).withCredentials();return d.send(b),d}deleteRequestDB(a){return c.del(this.rocDbUrl+a).withCredentials()}async verifyRoc(){const a=await this.getRequest("/auth/session");return 200===a.statusCode?a.body.ok?void(this.rocReady=!0,a.body.authenticated&&(this.rocAuthenticated=!0,this.rocUsername=a.body.username,this.getMenuContent())):void g.error("roc-views: unexpected response",a.body):void g.error(`roc-views: unable to contact ${this.rocUrl}`)}createDom(){this.$_elToOpen||(this.$_elToOpen=a("<div>")),this.rocAuthenticated?this.openMenu("tree"):this.openMenu("login")}openMenu(a){switch(a){case this.currentMenu:return;case"tree":this.$_elToOpen.html(this.getMenuContent()),this.currentMenu="tree";break;case"login":this.$_elToOpen.html(this.getLoginContent()),this.currentMenu="login";break;default:g.error(`roc-views: unexpected value for which: ${a}`);}}getLoginContent(){var b=a("<div>"),c=a("<a>",{text:"here",href:"#",click:()=>this.login()});return b.append("Click ").append(c).append(" to login"),b}login(){var a=encodeURIComponent(document.location.href);document.location.href=`${this.rocUrl}/auth/login?continue=${a}`}async logout(){await this.getRequest("/auth/logout"),this.rocAuthenticated=!1,this.rocUsername=null,this.openMenu("login")}getMenuContent(){if(this.$menuContent)return this.$menuContent;var b=this.$menuContent=a("<div id=\"root\">").css("position","relative"),c=this.$hide=a("<div>").css({position:"absolute",width:"100%",height:"100%",zIndex:2,display:"flex",alignItems:"center",justifyContent:"center"}).hide(),d=a("<div>").css("zIndex",1),e=a("<div>"),f=a("<p>",{css:{display:"inline-block",width:"50%"}});f.append(a("<a>",{click:this.refresh.bind(this),css:s,text:"refresh"}));var g=a("<p>",{css:{display:"inline-block",textAlign:"right",width:"50%"}});g.append(`${this.rocUsername} | `).append(a("<a>",{click:this.logout.bind(this),css:s,text:"logout"})),e.append(f).append(g);var h=a("<div>",{css:{marginTop:"20px",width:"710px"}}),i=a("<div>",{css:{verticalAlign:"top",display:"inline-block",width:"360px"}}),j=a("<div></div>",{text:"Search: "}),k="",l=a("<input type=\"text\" size=\"20\">").keyup(()=>{var a=l.val();a!==k&&(this.doSearch(a),k=a)});j.append(l);var m=a("<div>"),n=a("<div>",{css:{overflowY:"auto",maxHeight:"500px"}});this.$tree=n,i.append(j).append(m).append(n);var o=a("<div>",{css:{display:"inline-block",height:"100%",marginLeft:"10px",width:"340px"}}),p=this.$title=a("<div>",{css:{width:"100%",textAlign:"center",paddingBottom:"5px"}}),q=a("<div>",{css:{height:"80%",width:"100%"}});q.append("<h3>View information</h3>"),this.$infoBox=a("<div>").appendTo(q),q.append("<h3>Revisions</h3>"),this.$revBox=a("<div>",{css:{maxHeight:"300px"}}).appendTo(q),q.append("<h3>Attachments</h3>"),this.$attachmentsBox=a("<div>").appendTo(q);var r=a("<button>Upload attachments</button>").button().click(()=>this.uploadFiles());this.$attachmentsBox.html(r),q.append("<h3>Permissions</h3>"),this.$permissionsBox=a("<div>").appendTo(q),q.append("<h3>Metadata</h3>"),this.$metaBox=a("<div>").appendTo(q);var t=this.$publicCheckbox=a("<input type=\"checkbox\" />").click(a=>{a.preventDefault(),this.togglePublic()}),u=a("<div>").append(t).append("Public"),v=this.$ownersList=a("<div>").css({marginTop:"5px",marginBottom:"5px"}),w=a("<button>Add owner</button>").click(()=>this.addOwner()),x=a("<div>").append(v).append(w);const y=this.$permissionsContainer=a("<div>");this.$permissionsBox.html(y),y.append(u).append(x),q.accordion({heightStyle:"content"});var z=a("<div>",{css:{paddingTop:"20px",height:"20%"}}),A=this.$closeButton=a("<button>Close view</button>").button({disabled:!0}).click(()=>this.closeLoadedView()),B=this.$saveButton=a("<button>Save</button>").button({disabled:!0}).click(()=>this.saveCurrentView("active")),C=this.$saveAsButton=a("<button>Save as</button>").button({disabled:!0}).click(()=>this.saveAs()),D=this.$saveAsText=a("<input type=\"text\" size=\"15\" />").css("display","none");return z.append(A).append(B).append("<br>").append(C).append(D),o.append(p).append(q).append(z),h.append(i).append(o),d.append(e).append(h),b.append(c).append(d),this.refresh(),b}async getViews(){const a=await this.getRequestDB("/entry/_all",{right:"write"});return a.body.filter(a=>!0!==a.$deleted)}async refresh(){this.populateInfo(),this.tree&&(this.$tree.fancytree("destroy"),this.tree=null),this.activeNode=null,this.setActiveView(null),this.setLoadedNode(null);const b=await this.getViews();var c=this.getTree(b);this.$tree.fancytree({source:c,toggleEffect:!1,debugLevel:0,extensions:["dnd","filter"],dnd:{autoExpandMS:300,preventVoidMoves:!0,preventRecursiveMoves:!0,dragStart:a=>!this.inSearch&&!a.folder,dragEnter:(a,b)=>{var c=b.otherNode;return!(a.folder&&a===c.parent)&&!!a.folder},dragDrop:(a,b)=>{var c=b.otherNode;this.showHide(!0),c.data.view.moveTo(a).then(b=>{this.showHide(!1),b?c.moveTo(a):f.showNotification("View could not be moved","error")})}},filter:{mode:"hide",fuzzy:!0},activate:(a,b)=>this.onActivate(a,b),dblclick:(a,b)=>this.onDblclick(a,b)}),this.$tree.on("mouseenter mouseleave","span.fancytree-title",b=>{const c=a.ui.fancytree.getNode(b);"mouseenter"!==b.type||c.folder?this.populateInfo(this.activeView):this.populateInfo(c)}),this.tree=this.$tree.fancytree("getTree"),this.renderFlavor(),this.$tree.contextmenu({delegate:"span.fancytree-title",preventContextMenuForPopup:!0,show:!1,menu:[],beforeOpen:(b,c)=>{if(this.inSearch)return!1;var d=a.ui.fancytree.getNode(c.target);if(d.folder){var e=d.data.path,f=[{title:"Create folder",cmd:"createFolder",uiIcon:"ui-icon-folder-collapsed"}];if(1===e.length){f.push({title:"New flavor...",cmd:"newFlavor",uiIcon:"ui-icon-document-b"}),f.push({title:"----"});const a=this.flavors;for(var g=0;g<a.length;g++)f.push({title:a[g],cmd:"switchFlavor",uiIcon:a[g]===this.flavor?"ui-icon-check":void 0})}this.$tree.contextmenu("replaceMenu",f)}else{for(var h,j=this.flavors,k=[],l=d.data.view.flavors,g=0;g<j.length;g++)h=!!l[j[g]],k.push({title:j[g],cmd:"toggleFlavor",uiIcon:h?"ui-icon-check":void 0});this.$tree.contextmenu("replaceMenu",[{title:"Rename",cmd:"renameView",uiIcon:"ui-icon-pencil"},{title:"Delete",cmd:"deleteView",uiIcon:"ui-icon-trash"},{title:"Flavors",children:k}])}d.setActive()},select:(b,c)=>{const d=a.ui.fancytree.getNode(c.target);let e;switch(c.cmd){case"createFolder":this.createFolder(d);break;case"deleteView":this.deleteView(d);break;case"renameView":this.renameView(d);break;case"toggleFlavor":e=c.item.text(),this.toggleFlavor(d,e);break;case"switchFlavor":e=c.item.text(),this.switchToFlavor(e);break;case"newFlavor":this.newFlavor();break;default:g.error(`unknown action: ${c.cmd}`);}},createMenu(b){a(b.target).css("z-index",1e4)}}),this.selectLoadedNode()}selectLoadedNode(){const a=i.lastLoaded.view.url,b=/\/([^/]+)\/view\.json/,c=b.exec(a);if(c){const a=a=>{a.getParent().setExpanded(!0),a.setActive(!0),this.setLoadedNode(a),this.setActiveView(a)},b=c[1];let d,e=!1;this.tree.visit(c=>{if(c.data.view&&c.data.view.id===b){if(c.data.flavor===this.flavor)return e=!0,a(c),!1;d||(d=c)}}),!e&&d&&(this.switchToFlavor(d.data.flavor),a(d))}}newFlavor(){var b=a("<div>Name of the new flavor: </div>"),c=a("<input type=\"text\" />").appendTo(b).on("keypress",a=>{13===a.keyCode&&d()});const d=()=>{var a=p(c.val());return a?void(-1===this.flavors.indexOf(a)&&(this.tree.rootNode.addNode({folder:!0,title:a,path:[a]}),this.flavors.push(a),this.flavors.sort()),this.switchToFlavor(a),e.dialog("destroy")):f.showNotification("Invalid name","error")};var e=f.dialog(b,{buttons:{Create:d}})}createFolder(b){var c=a("<div>Name of the directory: </div>"),d=a("<input type=\"text\" />").appendTo(c).on("keypress",a=>{13===a.keyCode&&e()});const e=()=>{var a=o(d.val());if(!a)return f.showNotification("Invalid name","error");var c=b.getChildren();if(c)for(var e=0;e<c.length;e++)if(c[e].title===a&&c[e].folder)return f.showNotification(`Folder ${a} already exists`,"error");b.setExpanded(!0);var h=b.addNode({folder:!0,title:a,path:b.data.path.concat(a)});b.sortChildren(l),h.setActive(),g.dialog("destroy"),this.renderFlavor()};var g=f.dialog(c,{buttons:{Save:e}})}async deleteView(a){if(await f.confirm(`This will delete the view named "${a.title}" and all related data.<br>Are you sure?`,"Yes, delete it!","Maybe not...")){this.showHide(!0);const b=await a.data.view.remove();this.showHide(!1),b?(f.showNotification("View deleted","success"),a.remove(),a===this.loadedNode&&(i.switchView({view:{},data:{}},!0,{doNotLoad:!0}),this.setLoadedNode(null),this.setActiveView(null))):f.showNotification("Error while deleting view","error")}}renameView(b){var c=a(`<div>Renaming view "${b.title}"<br>New name: </div>`),d=a(`<input type="text" value="${b.data.view.getName(b.data.flavor)}"/>`).appendTo(c).on("keypress",a=>{13===a.keyCode&&e()}).select();const e=()=>{var a=d.val().trim();return 0===a.length?f.showNotification("Name cannot be empty","error"):(this.showHide(!0),b.data.view.rename(b.data.flavor,a).then(c=>{this.showHide(!1),c?(f.showNotification("View was renamed","success"),b.setTitle(a),this.renderActiveView()):f.showNotification("Error while renaming view","error"),g.dialog("destroy")}))};var g=f.dialog(c,{buttons:{Rename:e}})}async toggleFlavor(a,b){const c=a.data.view;this.showHide(!0);const d=await c.toggleFlavor(b,this.flavor);if(this.showHide(!1),!d)f.showNotification("Error while toggling flavor","error");else if("err-one"===d.state)f.showNotification("Cannot remove the last flavor","error");else if("removed"===d.state){let a;if(this.tree.rootNode.visit(d=>{if(d.data.view===c&&d.data.flavor===b)return a=d,!1}),a)a.remove();else throw new Error("Node not found");f.showNotification(`Flavor ${b} removed`,"success")}else if("added"===d.state){let a=this.tree.rootNode.getChildren();for(const e of a)if(e.title===b){this.addNodeAndSelect(e,{title:d.name,folder:!1,view:c,flavor:b});break}this.switchToFlavor(b),f.showNotification(`Flavor ${b} added`,"success")}else throw new Error(`unexpected result: ${d}`);this.renderActiveView()}doSearch(a){""===a?(this.inSearch=!1,this.tree.clearFilter(),this.renderFlavor()):(this.inSearch=!0,this.tree.filterNodes(a,{autoExpand:!0,leavesOnly:!0}))}switchToFlavor(a){this.flavor!==a&&(this.flavor=a,this.renderFlavor(),this.loadedNode&&!this.loadedNode.data.view.hasFlavor(a)&&(this.setLoadedNode(null),this.setActiveView(null)))}renderFlavor(){var a=!1;this.tree.filterBranches(b=>b.folder&&b.title===this.flavor&&1===b.data.path.length?(a=!0,b.setExpanded(!0),!0):(b.setExpanded(!1),!1)),a||(this.tree.rootNode.addNode({folder:!0,title:this.flavor,path:[this.flavor]}),this.flavors.push(this.flavor),this.flavors.sort(),this.renderFlavor())}onActivate(a,b){this.activeNode=b.node,b.node.folder?(this.setActiveView(this.loadedNode),this.$saveAsButton.button("enable"),this.$saveAsText.show()):(this.setActiveView(b.node),this.$saveAsButton.button("disable"),this.$saveAsText.hide())}populateInfo(c){if(!c)return this.$title.html("&nbsp;"),this.$infoBox.empty(),this.$revBox.empty(),this.$permissionsContainer.hide(),void this.$metaBox.empty();const d=c.data.view;this.$title.text(d.title),this.$infoBox.html(a("<p>").append(`Name: <b>${b.escape(c.title)}</b><br>
                Folder: ${d.getPath(c.data.flavor)}<br>
                Visualizer version: ${d.version}<br><br>
                Size: ${e.formatSize(d.size)}<br>
                Id: ${d.id}<br>
                Last revision: ${d.revid}<br><br>
                Created on: ${d.creationDate.toLocaleString()}<br>
                Last modified: ${d.modificationDate.toLocaleString()}<br>
                Owner: ${d.owner}`)),this.$metaBox.html(a("<p>").append(`
                    <table>
                    <tr><td>Keywords:</td><td><input type="text" value="${d.keywords?d.keywords.join(", "):""}"/></td></tr>
                    <tr><td>Icon:</td><td><input type="text" value="${d.icon||""}" /></td></tr>
                    <tr><td>Short name:</td><td><input type="text" value="${d.name||""}" /></td></tr>
                    <tr><td>Category:</td><td><input type="text" value="${d.category||""}" /></td></tr>
                    </table>
                `)),this.loadedNode&&this.loadedNode!==this.activeNode&&(this.$infoBox.append("<br>"),this.$infoBox.append(a("<p>").append(a("<a>",{click:this.selectLoadedNode.bind(this),css:s,text:"Select current view"})))),this.reloadRevisions(c),this.$permissionsContainer.show(),this.$publicCheckbox.prop("checked",d.public),this.$ownersList.html(`Owners: ${d.owners.join(", ")}`)}async reloadRevisions(b,c){const d=b.data.view;this.$revBox.html("loading...");const e=await d.getRevisions(c);this.$revBox.empty(),this.$revBox.append(a("<p>").html(a("<a>",{click:this.reloadRevisions.bind(this,b,!0),css:s,text:"refresh"}))),this.$revBox.append("<br>"),e.forEach(c=>{const d=a("<a>",{click:this.loadRevision.bind(this,b,c),css:s,class:"roc-revision-link",text:c,title:""});d.tooltip({content:this.updateRevInfo.bind(this,b,c)});const e=a("<p>").html(d);this.$revBox.append(e)})}loadRevision(a,b){const c=a.data.view;c.setRevision(b),this.loadNode(a)}async updateRevInfo(a,b,c){const d=a.data.view,e=await d.getRevisionData(b);c(new Date(e.$modificationDate).toLocaleString())}async saveAs(){let a=this.activeNode;if(!a.folder)return;const b=this.$saveAsText.val().split("/");for(let a=0;a<b.length;a++){const c=o(b[a]);if(!c)return f.showNotification("Invalid name","error");b[a]=c}main:for(let d=0;d<b.length-1;d++){const e=b[d];var c=a.getChildren();if(c)for(let b=0;b<c.length;b++)if(c[b].title===e&&c[b].folder){a=c[b];continue main}a.setExpanded(!0);const f=a.addNode({folder:!0,title:e,path:a.data.path.concat(e)});a.sortChildren(l),a=f}const d=b[b.length-1],e=this.getCurrentView(),g=this.flavor,j={$kind:"view",$content:{version:e.version,title:e.title,flavors:{[g]:a.data.path.slice(1).concat(d)}},_attachments:{"view.json":e.attachment}},k=new h(j,this);this.showHide(!0);try{await k.save()}catch(a){return this.showHide(!1),void f.showNotification("View could not be saved","error")}this.showHide(!1),f.showNotification("View saved","success"),this.addNodeAndSelect(a,{title:d,folder:!1,view:k,flavor:g}),i.switchView(k.getViewSwitcher(),!0,{doNotLoad:!0})}closeLoadedView(){this.loadedNode&&(i.switchView({view:{},data:{}},!0),this.setLoadedNode(null))}saveCurrentView(a){var b;if(b="active"===a?this.activeView:this.loadedNode,b){const a=f.dialog(t({view:b.data.view,flavor:b.data.flavor,flavors:b.data.view.flavors[b.data.flavor]}),{width:"400px",buttons:{Save:()=>{a.dialog("close"),this.showHide(!0),b.data.view.saveView(this.getCurrentView()).then(a=>{this.showHide(!1),a?(f.showNotification("View saved","success"),this.renderActiveView()):f.showNotification("View could not be saved","error")})}}})}else f.showNotification("No view loaded in view manager","error")}onDblclick(a,b){var c=b.node;if(!c.folder){var d=c.data.flavor;this.switchToFlavor(d),this.inSearch&&this.doSearch(""),c.setActive(!0),c.data.view.setRevision(null),this.loadNode(c)}}loadNode(a){this.setLoadedNode(a);var b=a.data.view;i.switchView(b.getViewSwitcher(),!0,{withCredentials:!0})}getTree(a){for(var b,c=new Map,d=new Set,e=0;e<a.length;e++)for(var f in b=new h(a[e],this),b.content.flavors)d.add(f),m(c,b,f,b.content.flavors[f]);this.flavors=Array.from(d).sort();var g=[];for(var j of c){var k=q(j[0]);this.buildElement(g,k,j[1],[k],!0,k)}return g.sort(l),g}buildFolder(a,b,c,d,e){for(var f of b){var g=q(f[0]);this.buildElement(a,g,f[1],c.concat(g),d,e)}a.sort(l)}buildElement(a,b,c,d,e,f){if(c instanceof Map){var g={title:b,folder:!0,children:[],path:d};e&&b===this.flavor&&(g.expanded=!0),this.buildFolder(g.children,c,d,!1,f),a.push(g)}else a.push({title:b,folder:!1,view:c,flavor:f})}addNodeAndSelect(a,b){const c=a.addNode(b);return a.sortChildren(l),a.setExpanded(!0),c.setActive(!0),this.renderFlavor(),this.setLoadedNode(c),this.setActiveView(c),c}setLoadedNode(a){this.loadedNode=a,a?this.$closeButton.button("enable"):this.$closeButton.button("disable")}setActiveView(a){this.activeView=a,a?this.$saveButton.button("enable"):this.$saveButton.button("disable"),this.renderActiveView()}renderActiveView(){this.populateInfo(this.activeView)}showHide(a){clearTimeout(this._showTimeout),a?(this.$hide.show(),this._showTimeout=setTimeout(()=>{this.$hide.html(e.getLoadingAnimation())},1e3)):(this.$hide.empty(),this.$hide.hide())}async uploadFiles(){if(!this.activeView)return;const a=`${this.rocDbUrl}/entry/${this.activeView.data.view.id}`,c=new j(a),d=await c.fetchList(),e=await k.uploadDialog(d,{mode:"couch",docUrl:a});if(e&&0!==e.length){this.showHide(!0);var h=b.partition(e,function(a){return a.toDelete});var i=h[0];h=b.partition(h[1],function(a){return a.size<r});var l=h[1],m=h[0];m.sort(function(c,a){return c.size<a.size?1:c.size===a.size?0:-1});var n=[],o=[],p=0;for(let a=0;a<m.length;a++)p+=m[a].size,p<r?o.push(m[a]):(n.push(o),o=[m[a]],p=m[a].size);o.length&&n.push(o);try{await c.remove(b.map(i,"name"));for(let a=0;a<l.length;a++)await c.upload(l[a]);for(let a=0;a<n.length;a++)await c.inlineUploads(n[a]);this.showHide(!1),f.showNotification("Files uploaded successfully","success")}catch(a){return this.showHide(!1),f.showNotification("Files upload failed (at least partially)","error"),void g.error(a.message,a.stack)}await this.reloadCurrent()}}async reloadCurrent(){this.loadedNode&&(await this.loadedNode.data.view.reload(),this.renderActiveView())}async togglePublic(){if(this.activeView){this.showHide(!0);const a=await this.activeView.data.view.togglePublic();this.showHide(!1),this.renderActiveView(),a||f.showNotification("Could not change permissions","error")}}addOwner(){if(!this.activeView)return;var b=a("<div>User email address: </div>"),c=a("<input type=\"text\" />").appendTo(b).on("keypress",a=>{13===a.keyCode&&d()});const d=()=>{var a=c.val();return e.isEmail(a)?void(this.showHide(!0),this.activeView.data.view.addGroup(a).then(a=>{a||f.showNotification("Could not add owner","error"),this.renderActiveView(),this.showHide(!1)}),g.dialog("destroy")):f.showNotification("Invalid email","error")};var g=f.dialog(b,{buttons:{Add:d}})}getMeta(){const a={};var b=this.$metaBox.find("input");return b[0]&&(a.keywords=b[0].value.split(",").map(a=>a.trim()).filter(a=>a)),b[1]&&(a.icon=b[1].value||void 0),b[2]&&(a.name=b[2].value||void 0),b[3]&&(a.category=b[3].value||void 0),a}getCurrentView(){const a=i.getView(),b=i.getViewJSON(),c=(a.configuration?a.configuration.title:"")||"";return Object.assign(this.getMeta(),{version:a.version,title:c,attachment:{content_type:"application/json",data:btoa(unescape(encodeURIComponent(b)))}})}}return u});
