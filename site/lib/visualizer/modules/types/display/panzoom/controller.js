'use strict';define(["modules/default/defaultcontroller","lodash"],function(a,b){"use strict";function c(){}var d;return $.extend(!0,c.prototype,a),c.prototype.moduleInformation={name:"Panzoom",description:"Panzoom",author:"Daniel Kostro",date:"15.06.2014",license:"MIT",cssClass:"panzoom"},c.prototype.references={picture:{type:["picture","png","jpeg","jpg","gif","svg","string"],label:"A picture (image url or typed svg)"},svg:{label:"An svg"},image:{type:["picture","png","jpeg","jpg","gif","string"],label:"An image url"},pixel:{label:"A pixel"},allpixel:{label:"A hash map of pixels by varname"},transform:{label:"A transform matrix (as a 6-element array)",type:"array"}},c.prototype.events={click:{label:"The image was clicked",refVariable:["pixel","allpixel"],refAction:["pixel"]},hover:{label:"A pixel was hovered",refVariable:["pixel","allpixel"],refAction:["pixel"]},transformChanged:{label:"The image pan or zoom changed",refVariable:["transform"],refAction:["transform"]}},c.prototype.variablesIn=["picture","image","svg"],c.prototype.actionsIn=$.extend({},a.actionsIn,{hide:"Hide an image",show:"Show an image",transform:"Set image transform",reset:"Reset transform"}),c.prototype.configurationStructure=function(){var a=[],b=this.module.definition.vars_in;if(b)for(var c=0,d=b.length;c<d;c++)a.push({title:b[c].name,key:b[c].name});return{groups:{group:{options:{type:"list"},fields:{highlightStrategy:{type:"combo",title:"Highlight behavior",options:[{title:"No highlights",key:"none"},{title:"Pan to center",key:"pan"},{title:"Pan to center and zoom",key:"panzoom"}],default:"none"},transformThrottling:{type:"float",title:"Throttle send transform",default:0}}},img:{options:{type:"table",multiple:!0},fields:{variable:{type:"combo",title:"Variable In",options:a,default:""},opacity:{type:"text",title:"Opacity [0,1]",default:"1"},order:{type:"text",title:"z-index",default:""},rendering:{type:"combo",title:"Rendering",options:[{key:"default",title:"Normal"},{key:"crisp-edges",title:"Crisp edges / Pixelated"}],default:"default"},scaling:{type:"combo",title:"Scaling Method",options:[{key:"max",title:"Extend to 100% of available space"},{key:"no",title:"Keep original image size"},{key:"maxIfLarge",title:"Normal if picture smaller than available space, 100% if not"}],default:"max"},rerender:{type:"checkbox",title:"Re-render on zoom",options:{yes:"Yes"},default:[]}}}}}},c.prototype.configAliases={img:["groups","img",0],highlightStrategy:["groups","group",0,"highlightStrategy",0],transformThrottling:["groups","group",0,"transformThrottling",0]},c.prototype.clickedPixel=function(a){this.createDataFromEvent("click","pixel",a),this.sendActionFromEvent("click","pixel",a)},c.prototype.allClickedPixels=function(a){this.createDataFromEvent("click","allpixel",a)},c.prototype.hoverPixel=function(a){this.createDataFromEvent("hover","pixel",a),this.sendActionFromEvent("hover","pixel",a)},c.prototype.allHoverPixels=function(a){this.lastHoverPixels=a,this.createDataFromEvent("hover","allpixel",a)},c.prototype.transformChanged=function(a){a=a.slice(0,6),d(this,a)},c.prototype.setTransformThrottling=function(a){d=0<a?b.throttle(transformMatrix,a):transformMatrix},c.prototype.export=function(){return this.module.view.export()},c});function transformMatrix(a,b){a.createDataFromEvent("transformChanged","transform",b),a.sendActionFromEvent("transformChanged","transform",b)}
